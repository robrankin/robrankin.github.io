<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>elasticsearch - Tag - </title>
        <link>http://example.org/tags/elasticsearch/</link>
        <description>elasticsearch - Tag - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 22 Apr 2022 06:42:34 &#43;0100</lastBuildDate><atom:link href="http://example.org/tags/elasticsearch/" rel="self" type="application/rss+xml" /><item>
    <title>Storing GitHub Org Auditlogs in Elasticsearch</title>
    <link>http://example.org/posts/github-org-auditlogs-elasticsearch/</link>
    <pubDate>Fri, 22 Apr 2022 06:42:34 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/github-org-auditlogs-elasticsearch/</guid>
    <description><![CDATA[I had a need to generate an alert when someone overrode a Branch Protection setting. To do this I decided to pull some of the GitHub Auditlog into Elasticsearch.
Theres a GitHub API client written in sh, called ok.sh, which can be found here. At the time it didn&rsquo;t support querying the Org Auditlog, so I PR&rsquo;d that here.
Once the PR was in place, I wrote a Dockerfile to create a container to deploy on Kubernetes.]]></description>
</item><item>
    <title>Azure Translation Services with Elasticsearch and Logstash</title>
    <link>http://example.org/posts/azure-translation-services-elasticsearch-logstash/</link>
    <pubDate>Thu, 31 Mar 2022 06:54:40 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/azure-translation-services-elasticsearch-logstash/</guid>
    <description><![CDATA[Recently had a need to parse some XML into Elasticsearch, specifically some CERT RSS feeds. Logstash has an RSS input, but it&rsquo;s a bit basic, and doesn&rsquo;t provide any language indications if the RSS feed includes them. One of the feeds I&rsquo;m using can be various languages per item, and many others are non-english entirely.
Since this would be parsing the same RSS feeds repeatedly, I need a predictable Document ID, so I can re-insert / upsert the item, and not create a new document every time the RSS feed is parsed.]]></description>
</item><item>
    <title>Alerting using SIEM Detections and ElastAlert2</title>
    <link>http://example.org/posts/alerting-using-siem-detections-and-elastalert/</link>
    <pubDate>Tue, 17 Aug 2021 08:32:41 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/alerting-using-siem-detections-and-elastalert/</guid>
    <description><![CDATA[ElasticSearch SIEM Detections and Alerts and Actions are quite useful features, except for the fact that actual alerting is behind a license paywall. So while both of these features can run rules, check for conditions, and record the results in an index, neither of them actually provide alerting support.
Alerting requires a Gold License, which if alerting is the only thing you want, is an excessive cost.
If you can&rsquo;t move off ElasticSearch to OpenSearch, which has Alerting available for free, you can use tools such as ElastAlert21 to handle the Alerting requirements.]]></description>
</item><item>
    <title>Using Elasticsearch Upserts to Combine Multiple Event Lines Into One</title>
    <link>http://example.org/posts/using-elasticsearch-upserts-to-combine-multiple-event-lines-into-one/</link>
    <pubDate>Tue, 24 Nov 2020 07:39:19 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/using-elasticsearch-upserts-to-combine-multiple-event-lines-into-one/</guid>
    <description><![CDATA[Note This approach is probably not appropriate for high volume / high throughput events. It required in my case quite a lot of Logstash parsing, and Elasticsearch doc_as_upsert use, both of which will have a significant performance penalty. For low throughput use it works fine.
 Sometimes log sources split logically grouped events into separate lines, and sometimes those logically grouped event lines are mixed into the same log file with actual singular line events.]]></description>
</item><item>
    <title>Event Threat Enrichment using Logstash and Minemeld</title>
    <link>http://example.org/posts/event-threat-enrichment-logstash-minemeld/</link>
    <pubDate>Fri, 25 Sep 2020 09:22:36 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/event-threat-enrichment-logstash-minemeld/</guid>
    <description><![CDATA[At my work we use the Elastic Stack for quite a few things, but one of the more recent-ish &ldquo;official&rdquo; roles is as our SIEM. Elastic introduced SIEM specific funcationality to Kibana a few releases ago, around 7.4 if I rembember correctly.
One of the features that the Elastic Stack doesn&rsquo;t really support well (yet) is an enrichment system. They did introduce an elasticsearch side enrichment system in 7.5, but in my opinionn theres a few problems with it:]]></description>
</item><item>
    <title>Querying Cylance Protect Api From Shell</title>
    <link>http://example.org/posts/querying-cylance-protect-api-from-shell/</link>
    <pubDate>Fri, 11 Sep 2020 17:32:50 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/querying-cylance-protect-api-from-shell/</guid>
    <description><![CDATA[We use Cylance as our AV type protection. They&rsquo;re one of the better solutions I&rsquo;ve seen, but theres some strange gaps in my opinion. There doesn&rsquo;t seem to be a built in method for alerting. One of the things we&rsquo;d like to be able to alert on is when a devices goes &ldquo;offline&rdquo;, and apparently this information is not provided through Cylance&rsquo;s syslog output. It is however available from their API.]]></description>
</item><item>
    <title>Kibaba Authentication using OAuth2 Proxy in Kubernetes</title>
    <link>http://example.org/posts/kibaba-oauth-kubernetes/</link>
    <pubDate>Thu, 06 Aug 2020 12:34:50 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/kibaba-oauth-kubernetes/</guid>
    <description><![CDATA[NOTE: There appears to be a bug with Kibanas impersonation features, and SIEM detection rules (and possibly elswhere): https://github.com/elastic/kibana/issues/74828
 Recently I had reason to want to integrate Kibana with Azure Active Directory for authentication. This might be easily possible if you have a commercial license with Elastic, but this wasn&rsquo;t the case this time.
After a little bit of research I found this article, from February 2017:
User Impersonation with X-Pack: Integrating Third Party Auth with Kibana]]></description>
</item><item>
    <title>Elasticsearch Provided Name and ILM</title>
    <link>http://example.org/posts/elasticsearch-provided-name/</link>
    <pubDate>Thu, 04 Jun 2020 10:43:51 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/elasticsearch-provided-name/</guid>
    <description><![CDATA[As I was learning a little about ElasticSearch&rsquo;s ILM (Index Lifecycle Management) feature, I ran across a parameter called provided_name when examining an index.
A bit of searching turned up the this Github issue, but it doesn&rsquo;t really explain where it comes from.
A bit more searching led me here.
So provided_name is a method of templating index names it seems, using date math as explained in the documentation.
Just make sure to HTML encode the index name, as per the example from the documentation:]]></description>
</item></channel>
</rss>
