<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>kubernetes - Category - </title>
        <link>http://example.org/categories/kubernetes/</link>
        <description>kubernetes - Category - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 21 Apr 2022 14:44:24 &#43;0100</lastBuildDate><atom:link href="http://example.org/categories/kubernetes/" rel="self" type="application/rss+xml" /><item>
    <title>Packet Capture using tcpdump on Kubernetes Pods in Azure AKS</title>
    <link>http://example.org/posts/packet-capture-tcpdump-kubernetes-pods-azure/</link>
    <pubDate>Thu, 21 Apr 2022 14:44:24 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/packet-capture-tcpdump-kubernetes-pods-azure/</guid>
    <description><![CDATA[Assuming the target containers can actually install new software (apt install is available) what follows is a quick and very dirty method to run tcpdump on k8s/AKS containers in Azure.
If you&rsquo;re running Kubernetes 1.23 and up, please read this instead:
https://downey.io/blog/kubernetes-ephemeral-debug-container-tcpdump/
Install some needed utilities Use whatever pod label is required to target the right pods.
kubectl get pods -l &lt;LABEL&gt; -o name | \ xargs -I{} kubectl exec {} -- apt-get -y update Install tcpdump, screen, psmisc, and rclone]]></description>
</item></channel>
</rss>
