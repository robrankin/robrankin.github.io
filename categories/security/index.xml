<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>security - Category - </title>
        <link>http://example.org/categories/security/</link>
        <description>security - Category - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 17 Aug 2021 10:21:48 &#43;0100</lastBuildDate><atom:link href="http://example.org/categories/security/" rel="self" type="application/rss+xml" /><item>
    <title>Modsecurity, DetectionOnly and enforcing select rules</title>
    <link>http://example.org/posts/modsecurity-detectiononly-and-enforcing-select-rules/</link>
    <pubDate>Tue, 17 Aug 2021 10:21:48 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/modsecurity-detectiononly-and-enforcing-select-rules/</guid>
    <description><![CDATA[I recently had a reason to want to achieve the following:
 ModSecurity globally in DetectionOnly mode (not enforcing rules, just logging)  Continue to operate the CRS in DetectionOnly mode.   For a specific ruleset:  Enforcing a default deny on inbound requests to an API. Enforcing allow rules for specific API routes and methods of the API    So I wanted all of our inbound CRS rules to continue to work in DetectionOnly mode, while I had a custom set of rules that would deny all access, with a set of whitelists to specific methods/paths.]]></description>
</item><item>
    <title>Alerting using SIEM Detections and ElastAlert2</title>
    <link>http://example.org/posts/alerting-using-siem-detections-and-elastalert/</link>
    <pubDate>Tue, 17 Aug 2021 08:32:41 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/alerting-using-siem-detections-and-elastalert/</guid>
    <description><![CDATA[ElasticSearch SIEM Detections and Alerts and Actions are quite useful features, except for the fact that actual alerting is behind a license paywall. So while both of these features can run rules, check for conditions, and record the results in an index, neither of them actually provide alerting support.
Alerting requires a Gold License, which if alerting is the only thing you want, is an excessive cost.
If you can&rsquo;t move off ElasticSearch to OpenSearch, which has Alerting available for free, you can use tools such as ElastAlert21 to handle the Alerting requirements.]]></description>
</item><item>
    <title>Event Threat Enrichment using Logstash and Minemeld</title>
    <link>http://example.org/posts/event-threat-enrichment-logstash-minemeld/</link>
    <pubDate>Fri, 25 Sep 2020 09:22:36 &#43;0100</pubDate>
    <author>Author</author>
    <guid>http://example.org/posts/event-threat-enrichment-logstash-minemeld/</guid>
    <description><![CDATA[At my work we use the Elastic Stack for quite a few things, but one of the more recent-ish &ldquo;official&rdquo; roles is as our SIEM. Elastic introduced SIEM specific funcationality to Kibana a few releases ago, around 7.4 if I rembember correctly.
One of the features that the Elastic Stack doesn&rsquo;t really support well (yet) is an enrichment system. They did introduce an elasticsearch side enrichment system in 7.5, but in my opinionn theres a few problems with it:]]></description>
</item></channel>
</rss>
