<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://robrankin.github.io/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Nov 2020 07:39:19 +0000</lastBuildDate>
    
	<atom:link href="https://robrankin.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Elasticsearch Upserts to Combine Multiple Event Lines Into One</title>
      <link>https://robrankin.github.io/posts/using-elasticsearch-upserts-to-combine-multiple-event-lines-into-one/</link>
      <pubDate>Tue, 24 Nov 2020 07:39:19 +0000</pubDate>
      
      <guid>https://robrankin.github.io/posts/using-elasticsearch-upserts-to-combine-multiple-event-lines-into-one/</guid>
      <description>Note: This approach is probably not appropriate for high volume / high throughput events. It required in my case quite a lot of Logstash parsing, and Elasticsearch doc_as_upsert use, both of which will have a significant performance penalty. For low throughput use it works fine.
 Sometimes log sources split logically grouped events into separate lines, and sometimes those logically grouped event lines are mixed into the same log file with actual singular line events.</description>
    </item>
    
    <item>
      <title>Event Threat Enrichment using Logstash and Minemeld</title>
      <link>https://robrankin.github.io/posts/event-threat-enrichment-logstash-minemeld/</link>
      <pubDate>Fri, 25 Sep 2020 09:22:36 +0100</pubDate>
      
      <guid>https://robrankin.github.io/posts/event-threat-enrichment-logstash-minemeld/</guid>
      <description>At my work we use the Elastic Stack for quite a few things, but one of the more recent-ish &amp;ldquo;official&amp;rdquo; roles is as our SIEM. Elastic introduced SIEM specific funcationality to Kibana a few releases ago, around 7.4 if I rembember correctly.
One of the features that the Elastic Stack doesn&amp;rsquo;t really support well (yet) is an enrichment system. They did introduce an elasticsearch side enrichment system in 7.5, but in my opinionn theres a few problems with it:</description>
    </item>
    
    <item>
      <title>Querying Cylance Protect Api From Shell</title>
      <link>https://robrankin.github.io/posts/querying-cylance-protect-api-from-shell/</link>
      <pubDate>Fri, 11 Sep 2020 17:32:50 +0100</pubDate>
      
      <guid>https://robrankin.github.io/posts/querying-cylance-protect-api-from-shell/</guid>
      <description>We use Cylance as our AV type protection. They&amp;rsquo;re one of the better solutions I&amp;rsquo;ve seen, but theres some strange gaps in my opinion. There doesn&amp;rsquo;t seem to be a built in method for alerting. One of the things we&amp;rsquo;d like to be able to alert on is when a devices goes &amp;ldquo;offline&amp;rdquo;, and apparently this information is not provided through Cylance&amp;rsquo;s syslog output. It is however available from their API.</description>
    </item>
    
    <item>
      <title>Kibana Authentication using OAuth2 Proxy in Kubernetes</title>
      <link>https://robrankin.github.io/posts/kibaba-oauth-kubernetes/</link>
      <pubDate>Thu, 06 Aug 2020 12:34:50 +0100</pubDate>
      
      <guid>https://robrankin.github.io/posts/kibaba-oauth-kubernetes/</guid>
      <description>NOTE: There appears to be a bug with Kibanas impersonation features, and SIEM detection rules (and possibly elswhere): https://github.com/elastic/kibana/issues/74828
 Recently I had reason to want to integrate Kibana with Azure Active Directory for authentication. This might be easily possible if you have a commercial license with Elastic, but this wasn&amp;rsquo;t the case this time.
After a little bit of research I found this article, from February 2017:
User Impersonation with X-Pack: Integrating Third Party Auth with Kibana</description>
    </item>
    
    <item>
      <title>Bringing ElasticSearch to its knees</title>
      <link>https://robrankin.github.io/posts/elasticsearch-gc-and-field-mapping-debugging/</link>
      <pubDate>Wed, 22 Oct 2014 17:23:27 +0000</pubDate>
      
      <guid>https://robrankin.github.io/posts/elasticsearch-gc-and-field-mapping-debugging/</guid>
      <description>Bringing ElasticSearch to it&amp;rsquo;s knees ElasticSearch is a bloody fantastic, scalable, distributed, Lucense based search system.
At Bede Gaming we&amp;rsquo;re currently using it primarily for log collection/searching, one of the more common implementations of the ELK stack (ElasticSearch, Logstash, Kibana). We&amp;rsquo;re also looking to use it more front line roles within the Bede Gaming platform.
Our current statistics look something like this:
 15 days of indexes online 120 days of previous indexes offline Approx 40GB of event data per day Approx 600GB of events online (last 15 days) Approx 4.</description>
    </item>
    
    <item>
      <title>Integrating Puppet with Azure</title>
      <link>https://robrankin.github.io/posts/2014-09-22-integrating-puppet-with-azure/</link>
      <pubDate>Mon, 22 Sep 2014 09:53:41 +0100</pubDate>
      
      <guid>https://robrankin.github.io/posts/2014-09-22-integrating-puppet-with-azure/</guid>
      <description>Goal Explore how we can integrate Puppet with Azure IaaS (Virtual Machines). Result should be a method to create new VM&amp;rsquo;s that will automatically be brought into compliance with the appropriate Puppet Manifest
Links Microsoft and PuppetLabs Azure integration: http://puppetlabs.com/solutions/microsoft
Azure Customization Tasks http://azure.microsoft.com/blog/2014/04/24/automating-vm-customization-tasks-using-custom-script-extension/
Puppet Facter http://puppetlabs.com/facter
Requirements When we create a new VM, we want that VM to automatically connect to our PuppetMaster, apply the appropriate manifest. In order to accomplish this there are 3 main points to consider:</description>
    </item>
    
    <item>
      <title>Modelling an nginx Application Proxy using Puppet and Hiera</title>
      <link>https://robrankin.github.io/posts/2014-09-17-modelling-an-nginx-application-proxy-using-puppet-and-hiera/</link>
      <pubDate>Wed, 17 Sep 2014 18:26:08 +0000</pubDate>
      
      <guid>https://robrankin.github.io/posts/2014-09-17-modelling-an-nginx-application-proxy-using-puppet-and-hiera/</guid>
      <description>Goal To model nginx configurations in Hiera, extracting those configurations from the Puppet DSL, and create a Puppet Profile to combine that with the nginx module.
Links Puppet Docs  Puppet Resource Abstraction Layer Puppet create_resources Scoping Namespacing  Puppet Roles/Profiles  Craig Dunn, Designing Puppet Talk End to End Roles and Profiles Example Puppet Workflow Part 1 Puppet Workflow Part 2  Hiera  Puppet Labs Hiera Docs Passing Variables to Hiera  nginx Module  jfryman nginx Puppet Module  nginx  nginx Project Page  Requirements Within nginx we need to define a set of nginx &amp;ldquo;server&amp;rdquo; contexts with the same set of &amp;ldquo;location&amp;rdquo; contexts in each &amp;ldquo;server&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>